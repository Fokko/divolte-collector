//
// Copyright 2014 GoDataDriven B.V.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// to be included under config key: 'divolte.tracking'
schema_mapping {
  version = 1

  regexes {
    // Matches the home page
    // e.g. http://www.example.com/
    // e.g. http://www.example.com/index.html
    home = "^http:\\/\\/[a-z0-9\\.\\-:]+\\/(?:index.html)?$"

    // Match different levels of taxonomy pages (up to three levels deep)
    // URL layout is: http://www.example.com/shop/section/category/
    // e.g. http://www.example.com/fashion/jeans/regular/
    taxonomy = "^(?:http|https):\\/\\/[a-z0-9\\.\\-:]+\\/(?:(?<shop>[a-z0-9\\-]+)\\/)(?:(?<section>[a-z0-9\\-]+)\\/)?(?:(?<category>[a-z0-9\\-]+)\\/)?$"
    shop = "^http:\\/\\/[a-z0-9\\.\\-:]+\\/[a-z0-9\\-]+\\/$"
    section = "^http:\\/\\/[a-z0-9\\.\\-:]+\\/[a-z0-9\\-]+\\/[a-z0-9\\-]+\\/$"
    category = "^http:\\/\\/[a-z0-9\\.\\-:]+\\/[a-z0-9\\-]+\\/[a-z0-9\\-]+\\/[a-z0-9\\-]+\\/$"

    // http://www.example.com/products/311381
    product_detail = "^http:\\/\\/[a-z0-9\\.\\-:]+\\/products\\/(?<product>[0-9]{6})$"

    // http://www.example.com/basket
    basket = "^http:\\/\\/[a-z0-9\\.\\-:]+\\/basket$"

    // http://www.example.com/search?q=search+phrase
    search = "^http:\\/\\/[a-z0-9\\.\\-:]+\\/search\\?q=(?<phrase>.*)$"

    // http://www.example.com/checkout
    checkout = "^http:\\/\\/[a-z0-9\\.\\-:]+\\/checkout$"
  }

  fields {
    // Simple field mappings
    // For fields that are potentially not set,
    // make sure that the Avro record field is nullable
    firstInSession = firstInSession
    timestamp = timestamp
    remoteHost = remoteHost
    referer = referer
    location = location
    viewportPixelWidth = viewportPixelWidth
    viewportPixelHeight = viewportPixelHeight
    screenPixelWidth = screenPixelWidth
    screenPixelHeight = screenPixelHeight
    devicePixelRatio = devicePixelRatio
    partyId = partyId
    sessionId = sessionId
    pageViewId = pageViewId

    userAgentString = userAgent
    userAgentName = userAgentName
    userAgentFamily = userAgentFamily
    userAgentVendor = userAgentVendor
    userAgentType = userAgentType
    userAgentVersion = userAgentVersion
    userAgentDevicesection = userAgentDevicesection
    userAgentOsFamily = userAgentOsFamily
    userAgentOsVersion = userAgentOsVersion
    userAgentOsVendor = userAgentOsVendor

    // pageType field will be set to the name of the first
    // regex in the list that matches the location, or is
    // not set if no regex matches (must be nullable in this
    // case)
    pageType {
      type = regex_name
      regexes = [home, category, section, shop, product_detail, basket, search, checkout]
      field = location
    }

    // productId will be set to the named capture group 'product' from
    // the regex named product_detail or will not be set if the regex
    // does not match the location (must be nullable in this case)
    productId {
      type = regex_group
      regex = product_detail
      field = location
      group = product
    }

    // Similar to productId
    shop {
      type = regex_group
      regex = taxonomy
      field = location
      group = shop
    }

    // Similar to productId
    section {
      type = regex_group
      regex = taxonomy
      field = location
      group = section
    }

    // Similar to productId
    category {
      type = regex_group
      regex = taxonomy
      field = location
      group = category
    }

    // In case of search, capture the search phrase
    searchPhrase {
      type = regex_group
      regex = search
      field = location
      group = phrase
    }
  }
}
